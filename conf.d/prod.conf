server {
    listen 80;
    listen [::]:80;
    server_name your.domainname.com;
    
    location ~ /.well-known/acme-challenge {
        allow all; 
        root /var/www/certbot;
    }

    return 301 https://$host$request_uri;
}

server {
          listen [::]:443 ssl http2;
          listen 443 ssl http2;

          server_name                  your.domainname.com;

          gzip                         on;
          gzip_comp_level              2;
          gzip_min_length              1024;
          gzip_vary                    on;
          gzip_proxied                 expired no-cache no-store private auth;
          gzip_types                   application/x-javascript application/javascript application/xml application/json text/xml text/css text$
          client_body_timeout          12;
          client_header_timeout        12;
          reset_timedout_connection    on;
          proxy_connect_timeout        600;
          proxy_send_timeout           600;
          proxy_read_timeout           600;
          send_timeout                 600;
          server_tokens                off;
          client_max_body_size         50m;

          expires                      1y;
          access_log                   off;
          log_not_found                off;
          
          ssl_certificate             /etc/nginx/ssl/live/your.domainname.com/fullchain.pem;
          ssl_certificate_key         /etc/nginx/ssl/live/your.domainname.com/privkey.pem;

          root                         /var/www/public/;

          location / {

            
            proxy_http_version          1.1;
            proxy_set_header            X-Forwarded-Host $host;
            proxy_set_header            X-Forwarded-Server $host;
            proxy_set_header            X-Real-IP $remote_addr;
            proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header            X-Forwarded-Proto $scheme;
            proxy_set_header            Host $http_host;
            proxy_set_header            Upgrade $http_upgrade;
            proxy_set_header            Connection "Upgrade";
            proxy_pass_request_headers  on;

            root                        /var/www/public;

            # proxy_pass                  http://google.com;

          }
}
